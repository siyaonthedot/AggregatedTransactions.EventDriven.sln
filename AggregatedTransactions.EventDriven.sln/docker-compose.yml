version: "3.9"

services:
  aggregator-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aggregator-api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=aggregator;Username=postgres;Password=postgres
      - Kafka__BootstrapServers=kafka:9092
    ports:
      - "5000:8080"   # API available at http://localhost:5000
    depends_on:
      - postgres
      - kafka

  aggregator-worker:
    build:
      context: ./Aggregator
      dockerfile: Dockerfile
    container_name: aggregator-worker
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=aggregator;Username=postgres;Password=postgres
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - postgres
      - kafka

  postgres:
    image: postgres:16
    container_name: aggregator-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aggregator
    ports:
      - "5432:5432"
    volumes:
      - aggregator_postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:8.6
    container_name: aggregator-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - aggregator_pgadmin_data:/var/lib/pgadmin

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: aggregator-zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: aggregator-kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: aggregator-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: aggregator-kafka-ui
    restart: always
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: aggregator-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: aggregator-zookeeper:2181
    depends_on:
      - kafka

volumes:
  aggregator_postgres_data:
  aggregator_pgadmin_data:
