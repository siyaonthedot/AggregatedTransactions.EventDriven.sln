version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  sql-primary:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql-primary
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "P@ssw0rd123!"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Your_password123 -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - sql_data:/var/opt/mssql

  aggregator:
    build:
      context: .
      dockerfile: src/Aggregator/Dockerfile
    container_name: aggregator-service
    ports:
      - "8081:8080"   # exposes HTTP for health + metrics
    environment:
      DOTNET_RUNNING_IN_CONTAINER: "true"
      ConnectionStrings__WriteDb: "Server=sql-primary;Database=TransactionsDb;User Id=sa;Password=Your_password123;"
      Kafka__BootstrapServers: "kafka:9092"
      Kafka__GroupId: "aggregator-service"
      Kafka__Topic: "transactions"
    depends_on:
      kafka:
        condition: service_healthy
      sql-primary:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: always

volumes:
  sql_data:
